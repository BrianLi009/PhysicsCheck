from helper import * 
from z3 import * 
s = Solver()
v0c1 = Complex("v0c1")
v0c2 = Complex("v0c2")
v0c3 = Complex("v0c3")
v0= (v0c1, v0c2, v0c3)
v1c1 = Complex("v1c1")
v1c2 = Complex("v1c2")
v1c3 = Complex("v1c3")
v1= (v1c1, v1c2, v1c3)
v2c1 = Complex("v2c1")
v2c2 = Complex("v2c2")
v2c3 = Complex("v2c3")
v2= (v2c1, v2c2, v2c3)
s.add(v0c1== 1) 
s.add(v0c2== 0) 
s.add(v0c3== 0) 
s.add(v1c1== 0) 
s.add(v1c2== 1) 
s.add(v1c3== 0) 
s.add(Or(Not(cross(v0,v2)[0] == 0), Not(cross(v0,v2)[1] == 0), Not(cross(v0,v2)[2] == 0)))
s.add(Or(Not(cross(v0,cross(cross(v2,v1),v1))[0] == 0), Not(cross(v0,cross(cross(v2,v1),v1))[1] == 0), Not(cross(v0,cross(cross(v2,v1),v1))[2] == 0)))
s.add(Or(Not(cross(v0,cross(v2,v1))[0] == 0), Not(cross(v0,cross(v2,v1))[1] == 0), Not(cross(v0,cross(v2,v1))[2] == 0)))
s.add(Or(Not(cross(v0,cross(cross(cross(v2,v1),v2),cross(v0,v1)))[0] == 0), Not(cross(v0,cross(cross(cross(v2,v1),v2),cross(v0,v1)))[1] == 0), Not(cross(v0,cross(cross(cross(v2,v1),v2),cross(v0,v1)))[2] == 0)))
s.add(Or(Not(cross(v0,cross(cross(v2,v1),v2))[0] == 0), Not(cross(v0,cross(cross(v2,v1),v2))[1] == 0), Not(cross(v0,cross(cross(v2,v1),v2))[2] == 0)))
s.add(Or(Not(cross(v0,cross(cross(cross(cross(v2,v1),v2),cross(v0,v1)),cross(cross(v2,v0),v2)))[0] == 0), Not(cross(v0,cross(cross(cross(cross(v2,v1),v2),cross(v0,v1)),cross(cross(v2,v0),v2)))[1] == 0), Not(cross(v0,cross(cross(cross(cross(v2,v1),v2),cross(v0,v1)),cross(cross(v2,v0),v2)))[2] == 0)))
s.add(Or(Not(cross(v0,cross(cross(cross(v2,v0),v2),cross(v0,v1)))[0] == 0), Not(cross(v0,cross(cross(cross(v2,v0),v2),cross(v0,v1)))[1] == 0), Not(cross(v0,cross(cross(cross(v2,v0),v2),cross(v0,v1)))[2] == 0)))
s.add(Or(Not(cross(v0,cross(cross(v2,v0),v2))[0] == 0), Not(cross(v0,cross(cross(v2,v0),v2))[1] == 0), Not(cross(v0,cross(cross(v2,v0),v2))[2] == 0)))
s.add(Or(Not(cross(cross(v2,v0),cross(cross(v2,v1),v1))[0] == 0), Not(cross(cross(v2,v0),cross(cross(v2,v1),v1))[1] == 0), Not(cross(cross(v2,v0),cross(cross(v2,v1),v1))[2] == 0)))
s.add(Or(Not(cross(cross(v2,v0),cross(v2,v1))[0] == 0), Not(cross(cross(v2,v0),cross(v2,v1))[1] == 0), Not(cross(cross(v2,v0),cross(v2,v1))[2] == 0)))
s.add(Or(Not(cross(cross(v2,v0),v1)[0] == 0), Not(cross(cross(v2,v0),v1)[1] == 0), Not(cross(cross(v2,v0),v1)[2] == 0)))
s.add(Or(Not(cross(cross(v2,v0),cross(cross(cross(v2,v1),v2),cross(v0,v1)))[0] == 0), Not(cross(cross(v2,v0),cross(cross(cross(v2,v1),v2),cross(v0,v1)))[1] == 0), Not(cross(cross(v2,v0),cross(cross(cross(v2,v1),v2),cross(v0,v1)))[2] == 0)))
s.add(Or(Not(cross(cross(v2,v0),cross(cross(v2,v1),v2))[0] == 0), Not(cross(cross(v2,v0),cross(cross(v2,v1),v2))[1] == 0), Not(cross(cross(v2,v0),cross(cross(v2,v1),v2))[2] == 0)))
s.add(Or(Not(cross(cross(v2,v0),cross(cross(cross(cross(v2,v1),v2),cross(v0,v1)),cross(cross(v2,v0),v2)))[0] == 0), Not(cross(cross(v2,v0),cross(cross(cross(cross(v2,v1),v2),cross(v0,v1)),cross(cross(v2,v0),v2)))[1] == 0), Not(cross(cross(v2,v0),cross(cross(cross(cross(v2,v1),v2),cross(v0,v1)),cross(cross(v2,v0),v2)))[2] == 0)))
s.add(Or(Not(cross(cross(v2,v0),cross(cross(cross(v2,v0),v2),cross(v0,v1)))[0] == 0), Not(cross(cross(v2,v0),cross(cross(cross(v2,v0),v2),cross(v0,v1)))[1] == 0), Not(cross(cross(v2,v0),cross(cross(cross(v2,v0),v2),cross(v0,v1)))[2] == 0)))
s.add(Or(Not(cross(cross(v2,v0),cross(v0,v1))[0] == 0), Not(cross(cross(v2,v0),cross(v0,v1))[1] == 0), Not(cross(cross(v2,v0),cross(v0,v1))[2] == 0)))
s.add(Or(Not(cross(v2,cross(cross(v2,v1),v1))[0] == 0), Not(cross(v2,cross(cross(v2,v1),v1))[1] == 0), Not(cross(v2,cross(cross(v2,v1),v1))[2] == 0)))
s.add(Or(Not(cross(v2,v1)[0] == 0), Not(cross(v2,v1)[1] == 0), Not(cross(v2,v1)[2] == 0)))
s.add(Or(Not(cross(v2,cross(cross(cross(v2,v1),v2),cross(v0,v1)))[0] == 0), Not(cross(v2,cross(cross(cross(v2,v1),v2),cross(v0,v1)))[1] == 0), Not(cross(v2,cross(cross(cross(v2,v1),v2),cross(v0,v1)))[2] == 0)))
s.add(Or(Not(cross(v2,cross(cross(cross(cross(v2,v1),v2),cross(v0,v1)),cross(cross(v2,v0),v2)))[0] == 0), Not(cross(v2,cross(cross(cross(cross(v2,v1),v2),cross(v0,v1)),cross(cross(v2,v0),v2)))[1] == 0), Not(cross(v2,cross(cross(cross(cross(v2,v1),v2),cross(v0,v1)),cross(cross(v2,v0),v2)))[2] == 0)))
s.add(Or(Not(cross(v2,cross(cross(cross(v2,v0),v2),cross(v0,v1)))[0] == 0), Not(cross(v2,cross(cross(cross(v2,v0),v2),cross(v0,v1)))[1] == 0), Not(cross(v2,cross(cross(cross(v2,v0),v2),cross(v0,v1)))[2] == 0)))
s.add(Or(Not(cross(v2,cross(v0,v1))[0] == 0), Not(cross(v2,cross(v0,v1))[1] == 0), Not(cross(v2,cross(v0,v1))[2] == 0)))
s.add(Or(Not(cross(cross(cross(v2,v1),v1),cross(cross(cross(v2,v1),v2),cross(v0,v1)))[0] == 0), Not(cross(cross(cross(v2,v1),v1),cross(cross(cross(v2,v1),v2),cross(v0,v1)))[1] == 0), Not(cross(cross(cross(v2,v1),v1),cross(cross(cross(v2,v1),v2),cross(v0,v1)))[2] == 0)))
s.add(Or(Not(cross(cross(cross(v2,v1),v1),cross(cross(v2,v1),v2))[0] == 0), Not(cross(cross(cross(v2,v1),v1),cross(cross(v2,v1),v2))[1] == 0), Not(cross(cross(cross(v2,v1),v1),cross(cross(v2,v1),v2))[2] == 0)))
s.add(Or(Not(cross(cross(cross(v2,v1),v1),cross(cross(cross(v2,v0),v2),cross(v0,v1)))[0] == 0), Not(cross(cross(cross(v2,v1),v1),cross(cross(cross(v2,v0),v2),cross(v0,v1)))[1] == 0), Not(cross(cross(cross(v2,v1),v1),cross(cross(cross(v2,v0),v2),cross(v0,v1)))[2] == 0)))
s.add(Or(Not(cross(cross(cross(v2,v1),v1),cross(cross(v2,v0),v2))[0] == 0), Not(cross(cross(cross(v2,v1),v1),cross(cross(v2,v0),v2))[1] == 0), Not(cross(cross(cross(v2,v1),v1),cross(cross(v2,v0),v2))[2] == 0)))
s.add(Or(Not(cross(cross(cross(v2,v1),v1),cross(v0,v1))[0] == 0), Not(cross(cross(cross(v2,v1),v1),cross(v0,v1))[1] == 0), Not(cross(cross(cross(v2,v1),v1),cross(v0,v1))[2] == 0)))
s.add(Or(Not(cross(cross(v2,v1),cross(cross(cross(v2,v1),v2),cross(v0,v1)))[0] == 0), Not(cross(cross(v2,v1),cross(cross(cross(v2,v1),v2),cross(v0,v1)))[1] == 0), Not(cross(cross(v2,v1),cross(cross(cross(v2,v1),v2),cross(v0,v1)))[2] == 0)))
s.add(Or(Not(cross(cross(v2,v1),cross(cross(cross(cross(v2,v1),v2),cross(v0,v1)),cross(cross(v2,v0),v2)))[0] == 0), Not(cross(cross(v2,v1),cross(cross(cross(cross(v2,v1),v2),cross(v0,v1)),cross(cross(v2,v0),v2)))[1] == 0), Not(cross(cross(v2,v1),cross(cross(cross(cross(v2,v1),v2),cross(v0,v1)),cross(cross(v2,v0),v2)))[2] == 0)))
s.add(Or(Not(cross(cross(v2,v1),cross(cross(cross(v2,v0),v2),cross(v0,v1)))[0] == 0), Not(cross(cross(v2,v1),cross(cross(cross(v2,v0),v2),cross(v0,v1)))[1] == 0), Not(cross(cross(v2,v1),cross(cross(cross(v2,v0),v2),cross(v0,v1)))[2] == 0)))
s.add(Or(Not(cross(cross(v2,v1),cross(cross(v2,v0),v2))[0] == 0), Not(cross(cross(v2,v1),cross(cross(v2,v0),v2))[1] == 0), Not(cross(cross(v2,v1),cross(cross(v2,v0),v2))[2] == 0)))
s.add(Or(Not(cross(cross(v2,v1),cross(v0,v1))[0] == 0), Not(cross(cross(v2,v1),cross(v0,v1))[1] == 0), Not(cross(cross(v2,v1),cross(v0,v1))[2] == 0)))
s.add(Or(Not(cross(v1,cross(cross(cross(v2,v1),v2),cross(v0,v1)))[0] == 0), Not(cross(v1,cross(cross(cross(v2,v1),v2),cross(v0,v1)))[1] == 0), Not(cross(v1,cross(cross(cross(v2,v1),v2),cross(v0,v1)))[2] == 0)))
s.add(Or(Not(cross(v1,cross(cross(v2,v1),v2))[0] == 0), Not(cross(v1,cross(cross(v2,v1),v2))[1] == 0), Not(cross(v1,cross(cross(v2,v1),v2))[2] == 0)))
s.add(Or(Not(cross(v1,cross(cross(cross(cross(v2,v1),v2),cross(v0,v1)),cross(cross(v2,v0),v2)))[0] == 0), Not(cross(v1,cross(cross(cross(cross(v2,v1),v2),cross(v0,v1)),cross(cross(v2,v0),v2)))[1] == 0), Not(cross(v1,cross(cross(cross(cross(v2,v1),v2),cross(v0,v1)),cross(cross(v2,v0),v2)))[2] == 0)))
s.add(Or(Not(cross(v1,cross(cross(cross(v2,v0),v2),cross(v0,v1)))[0] == 0), Not(cross(v1,cross(cross(cross(v2,v0),v2),cross(v0,v1)))[1] == 0), Not(cross(v1,cross(cross(cross(v2,v0),v2),cross(v0,v1)))[2] == 0)))
s.add(Or(Not(cross(v1,cross(cross(v2,v0),v2))[0] == 0), Not(cross(v1,cross(cross(v2,v0),v2))[1] == 0), Not(cross(v1,cross(cross(v2,v0),v2))[2] == 0)))
s.add(Or(Not(cross(cross(cross(cross(v2,v1),v2),cross(v0,v1)),cross(cross(cross(v2,v0),v2),cross(v0,v1)))[0] == 0), Not(cross(cross(cross(cross(v2,v1),v2),cross(v0,v1)),cross(cross(cross(v2,v0),v2),cross(v0,v1)))[1] == 0), Not(cross(cross(cross(cross(v2,v1),v2),cross(v0,v1)),cross(cross(cross(v2,v0),v2),cross(v0,v1)))[2] == 0)))
s.add(Or(Not(cross(cross(cross(cross(v2,v1),v2),cross(v0,v1)),cross(cross(v2,v0),v2))[0] == 0), Not(cross(cross(cross(cross(v2,v1),v2),cross(v0,v1)),cross(cross(v2,v0),v2))[1] == 0), Not(cross(cross(cross(cross(v2,v1),v2),cross(v0,v1)),cross(cross(v2,v0),v2))[2] == 0)))
s.add(Or(Not(cross(cross(cross(v2,v1),v2),cross(cross(cross(cross(v2,v1),v2),cross(v0,v1)),cross(cross(v2,v0),v2)))[0] == 0), Not(cross(cross(cross(v2,v1),v2),cross(cross(cross(cross(v2,v1),v2),cross(v0,v1)),cross(cross(v2,v0),v2)))[1] == 0), Not(cross(cross(cross(v2,v1),v2),cross(cross(cross(cross(v2,v1),v2),cross(v0,v1)),cross(cross(v2,v0),v2)))[2] == 0)))
s.add(Or(Not(cross(cross(cross(v2,v1),v2),cross(cross(cross(v2,v0),v2),cross(v0,v1)))[0] == 0), Not(cross(cross(cross(v2,v1),v2),cross(cross(cross(v2,v0),v2),cross(v0,v1)))[1] == 0), Not(cross(cross(cross(v2,v1),v2),cross(cross(cross(v2,v0),v2),cross(v0,v1)))[2] == 0)))
s.add(Or(Not(cross(cross(cross(v2,v1),v2),cross(cross(v2,v0),v2))[0] == 0), Not(cross(cross(cross(v2,v1),v2),cross(cross(v2,v0),v2))[1] == 0), Not(cross(cross(cross(v2,v1),v2),cross(cross(v2,v0),v2))[2] == 0)))
s.add(Or(Not(cross(cross(cross(v2,v1),v2),cross(v0,v1))[0] == 0), Not(cross(cross(cross(v2,v1),v2),cross(v0,v1))[1] == 0), Not(cross(cross(cross(v2,v1),v2),cross(v0,v1))[2] == 0)))
s.add(Or(Not(cross(cross(cross(cross(cross(v2,v1),v2),cross(v0,v1)),cross(cross(v2,v0),v2)),cross(cross(cross(v2,v0),v2),cross(v0,v1)))[0] == 0), Not(cross(cross(cross(cross(cross(v2,v1),v2),cross(v0,v1)),cross(cross(v2,v0),v2)),cross(cross(cross(v2,v0),v2),cross(v0,v1)))[1] == 0), Not(cross(cross(cross(cross(cross(v2,v1),v2),cross(v0,v1)),cross(cross(v2,v0),v2)),cross(cross(cross(v2,v0),v2),cross(v0,v1)))[2] == 0)))
s.add(Or(Not(cross(cross(cross(cross(cross(v2,v1),v2),cross(v0,v1)),cross(cross(v2,v0),v2)),cross(v0,v1))[0] == 0), Not(cross(cross(cross(cross(cross(v2,v1),v2),cross(v0,v1)),cross(cross(v2,v0),v2)),cross(v0,v1))[1] == 0), Not(cross(cross(cross(cross(cross(v2,v1),v2),cross(v0,v1)),cross(cross(v2,v0),v2)),cross(v0,v1))[2] == 0)))
s.add(Or(Not(cross(cross(cross(v2,v0),v2),cross(v0,v1))[0] == 0), Not(cross(cross(cross(v2,v0),v2),cross(v0,v1))[1] == 0), Not(cross(cross(cross(v2,v0),v2),cross(v0,v1))[2] == 0)))
s.add(cross(cross(cross(cross(v2,v1),v2),cross(v0,v1)),cross(cross(v2,v0),v2))[0]*cross(cross(v2,v1),v1)[0].conjugate()+cross(cross(cross(cross(v2,v1),v2),cross(v0,v1)),cross(cross(v2,v0),v2))[1]*cross(cross(v2,v1),v1)[1].conjugate()+cross(cross(cross(cross(v2,v1),v2),cross(v0,v1)),cross(cross(v2,v0),v2))[2]*cross(cross(v2,v1),v1)[2].conjugate()== 0) 
print (s.check()) 
print (s.model())
